<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>Deceptively Simple: All Posts</title>
  <description>Deceptively Simple: All Posts</description>
  <link>http://rmm.meta.ph/index.html</link>
  <lastBuildDate>Tue, 21 May 2013 19:18:33 PHT</lastBuildDate>
  <pubDate>Tue, 21 May 2013 19:18:33 PHT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Usync: Yet Another Data Synchronizer</title>
   <link>http://rmm.meta.ph/2013/05/usync-yet-another-data-synchronizer.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-rmm-meta-ph:-2013-05-usync-yet-another-data-synchronizer-html</guid>
   <pubDate>Tue, 21 May 2013 19:18:33 PHT</pubDate>
   <description>
&lt;html&gt;&lt;img src="http://rmm.meta.ph/img/1x1.gif?utm_source=all&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=%2F2013%2F05%2Fusync-yet-another-data-synchronizer.html" height="1" width="1"&gt;&lt;/img&gt;
 &lt;p&gt;I just released my trivial file synchronizer, uncreatively named &lt;strong&gt;Usync&lt;/strong&gt;, written in &lt;a href="http://www.scsh.net"&gt;Scsh&lt;/a&gt;. The online repository is located at &lt;a href="http://github.com/ebzzry/usync"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Squandered Relentlessness</title>
   <link>http://rmm.meta.ph/2013/05/squandered-relentlessness.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-rmm-meta-ph:-2013-05-squandered-relentlessness-html</guid>
   <pubDate>Thu, 09 May 2013 16:11:03 PHT</pubDate>
   <description>
&lt;html&gt;&lt;img src="http://rmm.meta.ph/img/1x1.gif?utm_source=all&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=%2F2013%2F05%2Fsquandered-relentlessness.html" height="1" width="1"&gt;&lt;/img&gt;
 &lt;p&gt;There is a disturbing, and eerie sensation that I feel whenever the damping realization that I am no longer a young child, is observed in my consciousness. The uneasy struggle between learning to let go of my portentous past and my capricious future, grips me, with heavy clench. It is not about the inability to redo gratuitous expenditure of somewhat liberally-provided lax confinements of time, but it is about the unsettling observation that the mindset I previously took for granted, is now something that would require me Atlas strength to even begin to summon. I miss the unrelenting inquisitiveness that I once wielded with ease, to my daily scuffling scores with the hordes of raids of life.&lt;/p&gt;
 &lt;p&gt;When we move past our zones of comfort, we are filled with eagerness to return back to our own fortified bunkers. We see our own phantasmal doppelgangers, communicating and showing to us what impending atrocities may rise out of the ground, ready to devour us alive. The longer we stay outside, the higher the probability of death. We make ourselves believe our own convictions. We justify through our own uncalibrated scales of what choices to make. Whenever unfamiliar territory is explored, we almost instantly coil ourselves, back, into seemingly intractable forms. We do it because of fear. We do it because we do not like the unfamiliar. We do it because of our affinity and devotion to safety.&lt;/p&gt;
 &lt;p&gt;We complain of the stifling absence of bounty, and yet we voluntarily stop ourselves from making even an inch of movement of a limb towards making the advancement on a prey. We are so romantically in love, with fervor, on the seeking of rationale to our unjustifiable excuses, but we equally seek sound reason. It is even more appalling to see that some of us insidiously advertise illusions of grandeur, with claims of full reprising sensations of the bounty's meat. Our personal biases towards reaching the reward, effectively stops us from actually reaching it. We succumb to the remorseless claims of others, on their failure, effectively rendering us ignorant of the unseen reality. When the number of persons that flock around us, is high enough, according to our personal metrics, we ignorantly instill to ourselves what they buzz to us, and then we impair ourselves and subsequently kill the essence of our individuality.&lt;/p&gt;
 &lt;p&gt;As adults, we are taught to restrain ourselves inside cages that we ourselves have built. It is unnerving to see this monstrous act unfold before my short field of view, everyday. We drag ourselves towards solitary confinements of our own barbed rooms. We make ourselves fond of preaching doubt to our fellowmen. And if our own kind does the same, we see feelings of accomplishment. That is not only horrendous, but also unsurprisingly stupid. When we were still young, we reach out to empty space, and create our own discoveries. We find out about things previously untaught to us. We have the willful disregard for danger and authority. We do not care how about the scratches and bruises that we get, as long as we satisfy our wild and insatiable taste for discovery. When fueled by curiosity, we discover yet another realm of possibilities&lt;span&gt; &amp;ndash; &lt;/span&gt;we find ourselves immersed in dimensions never before heard or seen, and no matter how much dirt and mud we lather up to our bodies, we did not care. All that mattered to us was to have fun in walking the unending journey of discovery. And yet, we learned.&lt;/p&gt;
 &lt;p&gt;It is ironic that just when we think we are already old enough to venture the world unaided by our training wheels, we smother ourselves with mediocre goals of pseudo-discovery. When the curtain is unveiled, we are confronted by an unsettling sight&lt;span&gt; &amp;ndash; &lt;/span&gt;we have lost the drive that once propelled us to have insights. We grew afraid to exercise the same techniques and principles we had once as children. We stopped ourselves from making curious inquisitions about what's out there. We have made ourselves feel comfortable with what is served on the institutionalized plates, without the slightest attempt to bolster up to devise questions. The society, which we are all part of, is part of the disease. This very illness is what we have been aiding to develop, from its inception. This unit is what we have been working hard on, to form our own senses of individuality. We wanted to stand out, and yet all we do is just blend in. How can a formidable hunter become so docile that he becomes the prey himself? Why do we throw away our spears when they are all we have to give us the ability to fight back? Our sensibilities have drifted away into black, bottomless pits, which we have all contributed to making.&lt;/p&gt;
 &lt;p&gt;It is aggreging to our shoulders, to see that generations after generations, we squander and believe that discoveries should always be made for us, peeled off then fed to our mouths. What have we become as sailors of the stars? Have we given up the drive to motivate ourselves to see what is on the other side of the rainbow? Have we tame ourselves too much, that we became willing to be incarcerated in zoos, for the pleasure of others?  Or did we just flush out our sense of power, to make ourselves stand out less, and mix more with the crowd, greatly reducing our distinctiveness when viewed from afar? It seems that, for now, we refuse to answer some questions, yet we retaliate to the idea that we are being interrogated of things deemed to be simpler than high school classroom lessons. But some things are common to us, albeit not all: we are afraid to see how society may react to our actions, no matter how silly or grave our actions may be. But on matters of more weight, we readily blend in, because we do not want rejection. Most of us are more than happy to think and move with the herd, without any forethought.&lt;/p&gt;
 &lt;p&gt;When we voluntarily attach to our legs, heavy chains and balls of steel, we should not expect to be able to run around the colosseum with ease. When we dare to explore uncharted territories, without regrets, without dis-enchantments, without the necessity to have another ship propel us forward, we have triumphed.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Over, Under, and Elsewhere</title>
   <link>http://rmm.meta.ph/2013/05/over-under-and-elsewhere.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-rmm-meta-ph:-2013-05-over-under-and-elsewhere-html</guid>
   <pubDate>Thu, 09 May 2013 16:08:36 PHT</pubDate>
   <description>
&lt;html&gt;&lt;img src="http://rmm.meta.ph/img/1x1.gif?utm_source=all&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=%2F2013%2F05%2Fover-under-and-elsewhere.html" height="1" width="1"&gt;&lt;/img&gt;
 &lt;p&gt;Our cunning ability for oversight is deridingly high. Whether it may be solving a problem or just trying to be creative. Our impulse to over-engineer is unusually prevalent if our initial expectations are not met. We drag our consciousness to lengths almost unfathomable because we think that if we pour in a lot of thought, the outcome is positively and proportionately high according to our convictions. We complain about our lack of tools. We complain about our lack of resources. Yet, we are astonished and brought to shocking disbelief when someone does it with far less than what our hands have. We disenchant the probability that what we are precisely looking for, is right on our ear. Our ability to dismiss ideal options hulking right in front of us, is appalling. Why do we need to dig an underground tunnel to get in, when all that is needed is to knock?&lt;/p&gt;
 &lt;p&gt;It is very disturbing that we unjustifiably position ourselves to unfailingly accept words just because we have been told to assimilate them. We believe that they are truths without making the slightest advance towards ensuring that what you just heard is infallible. It is also disconcerting that for many, if not most, that they'd rather take what they have been told, as is, rather than be criticized for raising their hand to ask what could possibly be dubious claims. When we say yes, without giving the slightest amount of thought, we have effectively enveloped ourselves with a cloud-like cushion, that, while it makes everything immediately adjacent from your skin heavenly, we neglect to pursue the intellectual safety and we give ourselves self-approved parachutes.&lt;/p&gt;
 &lt;p&gt;On a higher note, I also find that a lot of people radically position themselves to absolute positions. We are very fond of inventing and assigning labels among ourselves. We think that by moving ourselves to thought-bunkers, we build assumptions that because of the security that our bunker provides, we have prevailed. From our DNA that provides us with the information that contains the code of what makes us tick, we turn to our brains to store yet more information. These various pieces of information and high in breadth, that our humble DNA can no longer even begin to contain. But alas, what we have in our individual brains is still not enough to house our ever-growing house of knowledge. We needed to find a way to record them outside our bodies, stored somewhere where data retrieval is one of its most critical operations&lt;span&gt; &amp;ndash; &lt;/span&gt;we wrote and created records. We began by writing on stones, walls, and anything that would hopefully persist to contain what it must, across generations of readers. We have built colossal libraries, with gargantuan collections of books. With it, we have stored an immense amount of records, far beyond what all the brains of all humans can contain. Then, the libraries became computer databases. We took yet another step in building tower houses of what our ancestors knew, and what we know today. But both by intrigue and disturbance, we see that not even our most advanced technology is able to carefully record, with predictability, our coordinates in space in time, for the past, present, and future. We are in a time wherein we can, with high certainty, tell whether a drinking glass has something in it or not.&lt;/p&gt;
 &lt;p&gt;Some of us persist in delusions that claim to know what they have never ventured, or at the least, observed. It is very disheartening that instead of taking a step back and gaze at the sky for a moment, people instead immerse themselves in wonderland. This very intoxicating habit, harms not an individual, but the whole mankind. When someone tells you that answers to his questions can only be exclusively be answered always by a yes or no, leave him and that he no longer deserve to have your attention again. If you do not know the answer, you should say that you do not know the answer, instead of doing trapeze jumps without anyone to catch your hands.&lt;/p&gt;
 &lt;p&gt;Oftentimes, we overlook that all the tools that we need are right with us.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>The Y Combinator in Six Easy Steps</title>
   <link>http://rmm.meta.ph/2013/05/the-y-combinator-in-six-easy-steps.html?utm_source=all&amp;utm_medium=RSS</link>
   <guid>urn:http-rmm-meta-ph:-2013-05-the-y-combinator-in-six-easy-steps-html</guid>
   <pubDate>Thu, 09 May 2013 12:43:11 PHT</pubDate>
   <description>
&lt;html&gt;&lt;img src="http://rmm.meta.ph/img/1x1.gif?utm_source=all&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=%2F2013%2F05%2Fthe-y-combinator-in-six-easy-steps.html" height="1" width="1"&gt;&lt;/img&gt;
 &lt;p&gt;A lot of us have been taught that to be able to define a recursive procedure, the recursive invocation must "use" the name of the recursive procedure. The &lt;a href="http://en.wikipedia.org/wiki/Fixed-point_combinator#Y_combinator"&gt;Y combinator&lt;/a&gt;, however, lets us perform recursion, without referring to the named identifier.&lt;/p&gt;
 &lt;p&gt;The Y combinator has been both a source of inspiration and frustration for many. It evokes a eureka-like sensation once you get past the wall, but it also renders us scratching our heads when it just doesn't make sense to traverse the labyrinth. This post aims to bring my own approach on how to derive the Y combinator. It may not be the most elegant way, but it may work for you.&lt;/p&gt;
 &lt;p&gt;In the code examples in this post, the &lt;code&gt;&amp;gt;&lt;/code&gt; symbol denotes the prompt symbol for your Scheme implementation.&lt;/p&gt;
 &lt;p&gt;Let's start by defining a procedure named &lt;code&gt;sum0&lt;/code&gt; that computes the &lt;a href="https://en.wikipedia.org/wiki/Summation"&gt;summation&lt;/a&gt; of a positive integer, down to zero. In the following snippet, the recursive call happens when &lt;code&gt;sum0&lt;/code&gt; is applied in the else part of the condition.&lt;/p&gt;
 &lt;pre class="brush: scheme"&gt;&amp;gt; (define sum0
    (lambda (n)
      (if (zero? n)
          0
          (+ n (sum0 (- n 1))))))
&amp;gt; (sum0 100)
5050&lt;/pre&gt;
 &lt;p&gt; You have have observed that I have defined &lt;code&gt;sum0&lt;/code&gt; using an explicit &lt;code&gt;lambda&lt;/code&gt;. You'll see shortly, why.&lt;/p&gt;
 &lt;p&gt;Let's break that procedure futher, into more elementary components, and we'll apply it, using &lt;a href="https://en.wikipedia.org/wiki/Currying"&gt;currying&lt;/a&gt;.&lt;/p&gt;
 &lt;pre class="brush: scheme"&gt;&amp;gt; (define sum0
    (lambda (f)
      (lambda (n)
        (if (zero? n)
            0
            (+ n ((f f) (- n 1)))))))
&amp;gt; ((sum0 sum0) 100)
5050&lt;/pre&gt;
 &lt;p&gt; The extra &lt;code&gt;lambda&lt;/code&gt; was needed because we needed to have a way to "anonymize" the recursive procedure. In this case, we used the identifier &lt;code&gt;f&lt;/code&gt; to bind to the recursive procedure, which is &lt;code&gt;sum0&lt;/code&gt;, itself. The weird-looking &lt;code&gt;((f f) ...&lt;/code&gt; is needed, because we have to perform the same procedure invocation method used initially: &lt;code&gt;((sum0
sum0) 100)&lt;/code&gt;.&lt;/p&gt;
 &lt;p&gt;We're now going to exploit that property, to use a "nameless" approach, that is, without using the &lt;code&gt;sum0&lt;/code&gt; name.&lt;/p&gt;
 &lt;pre class="brush: scheme"&gt;&amp;gt; (((lambda (f)
      (lambda (n)
        (if (zero? n)
            0
            (+ n ((f f) (- n 1))))))
    (lambda (f)
      (lambda (n)
        (if (zero? n)
            0
            (+ n ((f f) (- n 1)))))))
   100)
5050&lt;/pre&gt;
 &lt;p&gt; Take note, that at this point, we're no longer using the &lt;code&gt;sum0&lt;/code&gt; name, to refer the the definition, except for later.&lt;/p&gt;
 &lt;p&gt;Next, we need to move the &lt;code&gt;(f f)&lt;/code&gt; part outside, to isolate the general (Y combinator), from the specific (&lt;code&gt;sum0&lt;/code&gt;) code.&lt;/p&gt;
 &lt;pre class="brush: scheme"&gt;&amp;gt; (((lambda (f)
      ((lambda (p)
         (lambda (n)
           (if (zero? n)
               0
               (+ n (p (- n 1))))))
       (lambda (v) ((f f) v))))
    (lambda (f)
      ((lambda (p)
         (lambda (n)
           (if (zero? n)
               0
               (+ n (p (- n 1))))))
       (lambda (v) ((f f) v)))))
   100)
5050&lt;/pre&gt;
 &lt;p&gt; During the procedure application, the identifier &lt;code&gt;p&lt;/code&gt; will be bound to &lt;code&gt;(lambda (v) ((f f) v))&lt;/code&gt;, and the identifier &lt;code&gt;v&lt;/code&gt; will be bound to &lt;code&gt;(-
n 1)&lt;/code&gt;.&lt;/p&gt;
 &lt;p&gt;Finally, we're going to isolate the Y combinator, from the &lt;code&gt;sum0&lt;/code&gt; procedure.&lt;/p&gt;
 &lt;pre class="brush: scheme"&gt;&amp;gt; (((lambda (x)
      ((lambda (f)
         (x (lambda (v) ((f f) v))))
       (lambda (f)
         (x (lambda (v) ((f f) v))))))
    (lambda (p)
      (lambda (n)
        (if (zero? n)
            0
            (+ n (p (- n 1)))))))
   100)
5050&lt;/pre&gt;
 &lt;p&gt; We replace the &lt;code&gt;sum0&lt;/code&gt;-specific definition with &lt;code&gt;x&lt;/code&gt;. This requires us again, to create an enveloping &lt;code&gt;lambda&lt;/code&gt;. Since &lt;code&gt;x&lt;/code&gt; is bound to the computing procedure, we no longer need to repeat it.&lt;/p&gt;
 &lt;p&gt;Optionally, we can explicitly create separate procedure definitions for the Y combinator itself, and the &lt;code&gt;sum0&lt;/code&gt; procedure.&lt;/p&gt;
 &lt;pre class="brush: scheme"&gt;&amp;gt; (define y
    (lambda (x)
      ((lambda (f)
         (x (lambda (v) ((f f) v))))
       (lambda (f)
         (x (lambda (v) ((f f) v)))))))
&amp;gt; (define %sum0
    (lambda (p)
      (lambda (n)
        (if (zero? n)
            0
            (+ n (p (- n 1)))))))
&amp;gt; (define sum0 (y %sum0))
&amp;gt; (sum0 100)
5050&lt;/pre&gt;
 &lt;p&gt; I hope this post has been useful in making you understand the Y combinator, currying, and procedure application. Please post your comments and suggestions, below. &amp;lt;-:&lt;/p&gt;&lt;/html&gt;</description></item></channel></rss>