<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>Cognizant Delusions: Posts tagged 'sysadmin'</title>
  <description>Cognizant Delusions: Posts tagged 'sysadmin'</description>
  <link>http://ebzzry.github.io/tags/sysadmin.html</link>
  <lastBuildDate>Sun, 14 Jun 2015 19:50:50 UT</lastBuildDate>
  <pubDate>Sun, 14 Jun 2015 19:50:50 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Fast Virtualization with QEMU</title>
   <link>http://ebzzry.github.io/blog/2015/06/15/fast-virtualization-with-qemu/?utm_source=sysadmin&amp;utm_medium=RSS</link>
   <guid>urn:http-ebzzry-github-io:-blog-2015-06-15-fast-virtualization-with-qemu</guid>
   <pubDate>Sun, 14 Jun 2015 19:50:50 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;Most of you are familiar with &lt;a href="https://en.wikipedia.org/wiki/Full_virtualization"&gt;Full Virtualization&lt;/a&gt; solutions before like VMware Workstation, VirtualBox, and Parallels. In this post, I&amp;rsquo;ll re-introduce you to another, arguably faster, way of doing things.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;h1 id="preparation"&gt;Preparation&lt;/h1&gt;

&lt;h2 id="hardware"&gt;Hardware&lt;/h2&gt;

&lt;p&gt;One of the first things that we need to do is to enable &lt;a href="https://en.wikipedia.org/wiki/Hardware-assisted_virtualization"&gt;Hardware-assisted virtualization&lt;/a&gt;, also called accelerated virtualization, in your hardware. If your CPU was made before 2006, chances are, this feature won&amp;rsquo;t be present on your chip. Also, take note that this step is not compulsory to make use of the virtualization solution described in this post, but it will &lt;strong&gt;significantly&lt;/strong&gt; speed things up. To enable accelerated virtualization, go into BIOS/UEFI, and look for the knob that enables this feature. The name into which it goes is different from manufacturer to manufacturer. You can verify on the command line if your system indeed recognizes it.&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; egrep &lt;span class="s1"&gt;&amp;#39;(vmx|svm)&amp;#39;&lt;/span&gt; /proc/cpuinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;If it returns some text, then we&amp;rsquo;re good.&lt;/p&gt;

&lt;h2 id="software"&gt;Software&lt;/h2&gt;

&lt;p&gt;Next, we need to install the essential applications. The commands below are for NixOS, so change it accordingly for your system.&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nix-env -i qemu vde2 spice
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;This will install the &lt;a href="http://wiki.qemu.org/"&gt;QEMU&lt;/a&gt; (pronounced as kee-moo) hypervisor, &lt;a href="http://vde.sourceforge.net/"&gt;VDE&lt;/a&gt; tools, and &lt;a href="http://www.spice-space.org/"&gt;SPICE&lt;/a&gt; support. QEMU, at least during its early days had the &lt;em&gt;meh&lt;/em&gt; impression &amp;mdash; it is OK, but not stellar. Since version 0.10.1, QEMU started supporting &lt;a href="http://www.linux-kvm.org/"&gt;KVM&lt;/a&gt;, a virtualization subsystem for Linux, that provides near-native virtualization performance using hardware-assisted virtualization. It even rivals the performance of the virtualization solutions mentioned above.&lt;/p&gt;

&lt;p&gt;Other suites offer the option of connecting to the guest machine&amp;rsquo;s display via VNC. The problem is that, it&amp;rsquo;s slow and clunky. The response time is just horrible. Using the &lt;a href="http://www.spice-space.org/"&gt;SPICE&lt;/a&gt; protocol, not only does it makes things faster, but it makes other things possible. Take note that SPICE is not a replacement for &lt;a href="https://en.wikipedia.org/wiki/Virtual_Network_Computing"&gt;VNC&lt;/a&gt;, but rather, it a different way of meeting our goals.&lt;/p&gt;

&lt;h1 id="configuration"&gt;Configuration&lt;/h1&gt;

&lt;h2 id="images"&gt;Images&lt;/h2&gt;

&lt;p&gt;QEMU supports an array of image types, however the &lt;a href="https://en.wikipedia.org/wiki/Qcow"&gt;QCOW2&lt;/a&gt; format is the most flexible, and feature-rich, for QEMU use.&lt;/p&gt;

&lt;p&gt;If you have an existing VirtualBox file (VDI), you can convert it to QCOW2 with:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; qemu-img convert -f vdi -O qcow2 vm.vdi vm.qcow2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;However, if you don&amp;rsquo;t have an image, yet, you can create one with:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; qemu-img create -f qcow2 vm.qcow2 20G
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The last step creates a 20GB image, that is named &lt;strong&gt;vm.qcow2&lt;/strong&gt;. Take note that the extension name doesn&amp;rsquo;t really matter &amp;mdash; you can name your image as &lt;strong&gt;index.html&lt;/strong&gt;, but that wouldn&amp;rsquo;t make a lot of sense, right? :)&lt;/p&gt;

&lt;h2 id="networking"&gt;Networking&lt;/h2&gt;

&lt;p&gt;QEMU &lt;a href="http://wiki.qemu.org/Documentation/Networking"&gt;supports&lt;/a&gt; several ways of setting up networking for its guest, but for this post we&amp;rsquo;re going to use VDE.&lt;/p&gt;

&lt;p&gt;We need to run several commands to prep the networking environment. Ideally, you&amp;rsquo;d want to save these in a shell function, or a shell script:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo vde_switch -tap tap0 -mod &lt;span class="m"&gt;660&lt;/span&gt; -group kvm -daemon
&lt;span class="gp"&gt;$&lt;/span&gt; sudo ip addr add 10.0.2.1/24 dev tap0
&lt;span class="gp"&gt;$&lt;/span&gt; sudo ip link &lt;span class="nb"&gt;set &lt;/span&gt;dev tap0 up
&lt;span class="gp"&gt;$&lt;/span&gt; sudo sysctl -w net.ipv4.ip_forward&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="gp"&gt;$&lt;/span&gt; sudo iptables -t nat -A POSTROUTING -s 10.0.2.0/24 -j MASQUERADE
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The above commands will:&lt;/p&gt;

&lt;blockquote&gt;
 &lt;ol&gt;
  &lt;li&gt;Create a VDE device&lt;/li&gt;
  &lt;li&gt;Configure the TCP/IP options for that device.&lt;/li&gt;
  &lt;li&gt;Enable the VDE device.&lt;/li&gt;
  &lt;li&gt;Enable packet forwarding on the host OS.&lt;/li&gt;
  &lt;li&gt;Setup the routing configuration.&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;

&lt;h1 id="execution"&gt;Execution&lt;/h1&gt;

&lt;h2 id="load-the-image"&gt;Load the image&lt;/h2&gt;

&lt;p&gt;We now need to invoke &lt;strong&gt;qemu-kvm&lt;/strong&gt;, the command that will launch everything up. The name of the command may differ with the one installed on your system.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re installing an OS from a bootable image, usually an ISO file, run:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; qemu-kvm -cpu host -m 2G -net nic,model&lt;span class="o"&gt;=&lt;/span&gt;virtio -net vde &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="go"&gt;-device AC97,addr=0x18 -vga qxl \&lt;/span&gt;
&lt;span class="go"&gt;-spice port=9999,addr=127.0.0.1,password=mysecretkey \&lt;/span&gt;
&lt;span class="go"&gt;-boot once=d -cdrom installer.iso \&lt;/span&gt;
&lt;span class="go"&gt;vm.qcow2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;On subsequent uses:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; qemu-kvm -cpu host -m 2G -net nic,model&lt;span class="o"&gt;=&lt;/span&gt;virtio -net vde &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="go"&gt;-device AC97,addr=0x18 -vga qxl \&lt;/span&gt;
&lt;span class="go"&gt;-spice port=9999,addr=127.0.0.1,password=mysecretkey \&lt;/span&gt;
&lt;span class="go"&gt;vm.qcow2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Let&amp;rsquo;s break that down:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-cpu host&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use the KVM processor with all the supported features&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-m 2G&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Allocate 2GB of host memory for the guest. Adjust as necessary.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-net nic,model=virtio -net vde&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a virtual NIC, and enable VDE networking&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-device AC97,addr=0x18&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Specify the audio adapter to emulate. &lt;a href="https://en.wikipedia.org/wiki/AC%2797"&gt;AC97&lt;/a&gt; works reasonably well for most configurations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-vga qxl&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Specify the video adapter to emulate. Use QXL when using SPICE&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-spice addr=127.0.0.1,port=9999,password=mysecretkey&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Specify the options for SPICE, separated by commas. &lt;strong&gt;addr&lt;/strong&gt; and &lt;strong&gt;port&lt;/strong&gt; are the IP address and TCP port that SPICE will listen on. Ideally, access to that port must be properly configured, and secured. &lt;strong&gt;password&lt;/strong&gt; is key that will be used by the SPICE client, &lt;code&gt;spicec&lt;/code&gt;, to connect to the guest display later.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-boot once=d -cdrom installer.iso&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Boot initially from &lt;code&gt;installer.iso&lt;/code&gt;, then on subsequent boots, boot in the normal order.&lt;/p&gt;

&lt;p&gt;Running the &lt;strong&gt;qemu-kvm&lt;/strong&gt; command above will load the image, but we won&amp;rsquo;t be able to view the display, yet.&lt;/p&gt;

&lt;h2 id="connect-to-the-spice-display"&gt;Connect to the SPICE display&lt;/h2&gt;

&lt;p&gt;To be able to use the guest machine&amp;rsquo;s display, we need to connect to the SPICE server, using the SPICE client &lt;strong&gt;spicec&lt;/strong&gt;:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; spicec -h 127.0.0.1 -p &lt;span class="m"&gt;5901&lt;/span&gt; -w mysecretkey
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Take note that closing the spicec window will not kill the QEMU session. If the guest OS captures the mouse input, press &lt;strong&gt;Shift+F12&lt;/strong&gt;, to get out of it.&lt;/p&gt;

&lt;h2 id="configure-guest-networking"&gt;Configure guest networking&lt;/h2&gt;

&lt;p&gt;Next, we need to properly configure the network configuration of the guest OS so that it can connect to the rest of the local network, and to the internet if the host machine has access to it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# IP address (any value from 10.0.2.2 to 10.0.2.254)
10.0.2.2

# Gateway (the host machines' address, from the guest machine's view.)
10.0.2.1

# DNS (Google's DNS service)
8.8.8.8
8.8.4.4&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="closing-the-curtains"&gt;Closing the Curtains&lt;/h1&gt;

&lt;h2 id="restore-networking"&gt;Restore networking&lt;/h2&gt;

&lt;p&gt;If you want to explicitly revert the network configuration, do the following.&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo iptables -t nat -D POSTROUTING -s 10.0.2.0/24 -j MASQUERADE
&lt;span class="gp"&gt;$&lt;/span&gt; sudo sysctl -w net.ipv4.ip_forward&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="gp"&gt;$&lt;/span&gt; sudo ip link &lt;span class="nb"&gt;set &lt;/span&gt;dev tap0 down
&lt;span class="gp"&gt;$&lt;/span&gt; sudo ip link delete tap0
&lt;span class="gp"&gt;$&lt;/span&gt; sudo pkill -9 vde_switch
&lt;span class="gp"&gt;$&lt;/span&gt; sudo rm -f /run/vde.ctl/ctl
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The above commands will:&lt;/p&gt;

&lt;blockquote&gt;
 &lt;ol&gt;
  &lt;li&gt;Revert the routing configuration.&lt;/li&gt;
  &lt;li&gt;Disable packet forwarding.&lt;/li&gt;
  &lt;li&gt;Disable the VDE device.&lt;/li&gt;
  &lt;li&gt;Delete the VDE device.&lt;/li&gt;
  &lt;li&gt;Kill the VDE process.&lt;/li&gt;
  &lt;li&gt;Remove control files.&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;

&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;QEMU supports a myriad of cool options that were not even discussed here, including saving and loading states (snapshots), creating screen and audio grabs, and a whole lot more. To learn more about them, click &lt;a href="http://wiki.qemu-project.org/Main_Page"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;QEMU with KVM is a powerful, fast, and flexible solution for doing &lt;a href="https://en.wikipedia.org/wiki/Full_virtualization"&gt;Full Virtualization&lt;/a&gt;. At least in my case, it out-performs the well-known options in the market. If you want to contribute to this project, head over to their &lt;a href="https://github.com/qemu/qemu"&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope this post helped you, in one way or another, learn more about QEMU and what it has to offer. Ciao!&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>Setting Up GPG and SSH in KDE</title>
   <link>http://ebzzry.github.io/blog/2014/09/17/setting-up-gpg-and-ssh-in-kde/?utm_source=sysadmin&amp;utm_medium=RSS</link>
   <guid>urn:http-ebzzry-github-io:-blog-2014-09-17-setting-up-gpg-and-ssh-in-kde</guid>
   <pubDate>Wed, 17 Sep 2014 11:53:15 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;When both GPG and SSH are integrated with KDE, it makes inter-operating with those systems very easy. It will make the difference between a loose-fitting glove, and one that fits snugly.&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;This quick tutorial will go over the steps on how to go about it. To accommodate everyone, I&amp;rsquo;ll still go about how to install and configure all the necessary components.&lt;/p&gt;

&lt;h1 id="prerequisites"&gt;Prerequisites&lt;/h1&gt;

&lt;p&gt;Chances are, you already have both GPG and SSH installed on your system. But if you don&amp;rsquo;t have them, you can install them with:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo apt-get install gnupg2 ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Another important software that we need to install is pinentry:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo apt-get install pinentry-qt4
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;It&amp;rsquo;s the component that prompts the user for passphrases.&lt;/p&gt;

&lt;h1 id="configure-ssh"&gt;Configure SSH&lt;/h1&gt;

&lt;p&gt;Now that we have the parts in front of us, it&amp;rsquo;s time to assemble them. The first thing that we need to do (although in reality the files that we are going to open in this section can be done in any order that you wish), is create your SSH keys:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ssh-keygen -t rsa
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; leave the passphrase empty. Shoot yourself first in the  head, if you really want to.&lt;/p&gt;

&lt;p&gt;The above command will create two files: 1) your public key, and 2) your private key. I need not tell you what they are because you know what they are already. Am I right?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/.ssh/id_rsa.pub
~/.ssh/id_rsa&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point, copy your SSH keys to the servers that you manage:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ssh-copy-id user@host
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="configure-gpg"&gt;Configure GPG&lt;/h1&gt;

&lt;p&gt;In case you forgot how to your keys, the command is:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; gpg2 --gen-key
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I should have this earlier, that if you want to create strong passphrases, use the &lt;a href="http://world.std.com/~reinhold/diceware.html"&gt;Diceware method&lt;/a&gt;. An &lt;a href="https://xkcd.com/936/"&gt;XKCD comic&lt;/a&gt; was written in case you&amp;rsquo;re wondering what it is, without reading the earlier link.&lt;/p&gt;

&lt;p&gt;Next thing to do is edit the main GPG config file:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; emacs ~/.gnupg/gpg.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Find the line that contains &lt;code&gt;use-agent&lt;/code&gt; and uncomment it, if it is commented. If that line does not exist just put &lt;code&gt;use agent&lt;/code&gt; at the end.&lt;/p&gt;

&lt;p&gt;We need to edit the agent file next:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; emacs ~/.gnupg/gpg-agent.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Then put the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;no-grab
default-cache-ttl 10800
default-cache-ttl-ssh 10800
pinentry-program /usr/bin/pinentry-qt4&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Those are &lt;em&gt;my&lt;/em&gt; preferred values. If you want to change them, look at the manpage first:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; man gpg-agent
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="configure-kde"&gt;Configure KDE&lt;/h1&gt;

&lt;p&gt;We now need to link the GPG agent with KDE. We&amp;rsquo;re going to create a &lt;em&gt;startup&lt;/em&gt; script for KDE that will invoke the GPG agent at startup. We&amp;rsquo;ll also tell the GPG agent to enable SSH support (in the old days, the SSH agent has to be ran separately from GPG).&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mkdir ~/.kde/env
&lt;span class="gp"&gt;$&lt;/span&gt; emacs ~/.kde/env/01_gpg-agent.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Then put in the following lines:&lt;/p&gt;

&lt;div class="brush: sh"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

killall gpg-agent
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;gpg-agent --enable-ssh-support --daemon&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Make it executable:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; chmod +x ~/.kde/env/01_gpg-agent.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we&amp;rsquo;ll create the &lt;em&gt;shutdown&lt;/em&gt; script for the GPG agent:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mkdir ~/.kde/shutdown
&lt;span class="gp"&gt;$&lt;/span&gt; emacs ~/.kde/shutdown/01_gpg-agent.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Then put in the following lines:&lt;/p&gt;

&lt;div class="brush: sh"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

killall gpg-agent
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Also make it executable:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; chmod +x ~/.kde/shutdown/01_gpg-agent.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="verification"&gt;Verification&lt;/h1&gt;

&lt;p&gt;Unfortunately, we have to restart our KDE session to take these settings into effect. If you how to make them work, without logging out, please let me know in the comments below.&lt;/p&gt;

&lt;p&gt;Press &lt;code&gt;Ctrl+Alt+Del&lt;/code&gt; to logout, then login with your account.&lt;/p&gt;

&lt;p&gt;Open a Konsole window, then connect to your favorite SSH server:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ssh user@remotehost
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;A pinentry dialog box should appear prompting you for your passphrase. This passphrase will be cached according to your settings in &lt;code&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt;. Subsequent SSH connection attempts will not prompt you for the passphrase within this timeout period.&lt;/p&gt;

&lt;p&gt;A similar behavior will happen if you encrypt a file with GPG:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; gpg2 -s -e -a -r john@remotehost file.dat
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;The steps outline above are meant to be succinct without going through the gory details. I avoided reiterating what was already said before so as not to bore you to death. If you found this useful, feel free to comment below.&lt;/p&gt;&lt;/html&gt;</description></item>
  <item>
   <title>An Introduction to Ugarit</title>
   <link>http://ebzzry.github.io/blog/2014/02/21/an-introduction-to-ugarit/?utm_source=sysadmin&amp;utm_medium=RSS</link>
   <guid>urn:http-ebzzry-github-io:-blog-2014-02-21-an-introduction-to-ugarit</guid>
   <pubDate>Fri, 21 Feb 2014 04:07:18 UT</pubDate>
   <description>&lt;html&gt;
&lt;p&gt;How many times have we experienced hindsight, after a catastrophic event has happened? how many times have we told ourselves that had we created backups of our precious data, we wouldn&amp;rsquo;t be in that dire situation, pulling our hairs out like a maniac?&lt;/p&gt;
&lt;!-- more--&gt;

&lt;p&gt;Most of us have been there &amp;mdash; we lost our precious files due inadvertent causes. We lost them because of disk crash, data corruption, security breach, and other reasons. But had we created a fallback, a big, safe foam that we can land on, it wouldn&amp;rsquo;t have been a lot of trouble, and heart ache. On the flip side, creating and managing backups can be daunting, and equally dangerous.&lt;/p&gt;

&lt;p&gt;In this post, we&amp;rsquo;ll talk about &lt;a href="http://www.kitten-technologies.co.uk/project/ugarit/doc/trunk/README.wiki"&gt;Ugarit&lt;/a&gt; , a nice piece of technology, that combines ease-of-use, and security, in a single tool.&lt;/p&gt;

&lt;h1 id="introduction"&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Ugarit is a classic example of a tool, that requires minimal setup and configuration, but is used many times. That once the initial tinkering is done, all we need to do is reuse the tool. But that isn&amp;rsquo;t Ugarit&amp;rsquo;s main strength &amp;mdash; it is the almost unholy marriage of convenience and security.&lt;/p&gt;

&lt;p&gt;Most, if not all the time, convenience is inversely proportional to security. That is, the more convenient something is, the less secure it is. With Ugarit, creating and managing backups is as easy as typing a short command.&lt;/p&gt;

&lt;h1 id="installation"&gt;Installation&lt;/h1&gt;

&lt;p&gt;First, we need to install &lt;a href="http://www.call-cc.org/"&gt;Chicken&lt;/a&gt;. Most likely, it can be installed via your package manager:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo apt-get install chicken-bin
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;If it isn&amp;rsquo;t available on your system, you may download it from &lt;a href="http://code.call-cc.org/"&gt;code.call-cc.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After Chicken is installed, let&amp;rsquo;s install Ugarit itself, and some dependencies:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; chicken-install -s ugarit tiger-hash aes
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;After this command completes, the command &lt;code&gt;ugarit&lt;/code&gt; will become available. To display command-line help:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit -h
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="configuration"&gt;Configuration&lt;/h1&gt;

&lt;p&gt;Ugarit at this point isn&amp;rsquo;t usable yet &amp;mdash; we need to specify where will it store the snapshots. When creating a snapshot of a directory several terabytes big, it is ideal to store the data on a fast, reliable, stress-tolerant disk. It is not uncommon for the command &lt;code&gt;ls&lt;/code&gt; to experience a noticeable lag when ran inside the data directory. Let&amp;rsquo;s presume that &lt;code&gt;/dev/sdb1&lt;/code&gt; is a large filesystem and we want to mount it to &lt;code&gt;/ugarit/&lt;/code&gt;.&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo mkdir /ugarit
&lt;span class="gp"&gt;$&lt;/span&gt; sudo mount /dev/sdb1 /ugarit
&lt;span class="gp"&gt;$&lt;/span&gt; sudo mkdir /ugarit/vault
&lt;span class="gp"&gt;$&lt;/span&gt; sudo chown -R &lt;span class="nv"&gt;$USER&lt;/span&gt; /ugarit
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Another, equally important requirement that we need to have is its config file, usually named &lt;code&gt;ugarit.conf&lt;/code&gt;. It is supplied as part of the required command line arguments. It is important to note, that this file does not reside in a fixed location, in contrast with some programs that look for a config file at start-up, from &lt;code&gt;~/&lt;/code&gt;. But before we actually create that file, we need to run some commands. Save the outputs of these commands, because we&amp;rsquo;ll be needing them later:&lt;/p&gt;

&lt;p&gt;Create a salt, for the hash function:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/random &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;64&lt;/span&gt; 2&amp;gt;/dev/null &lt;span class="p"&gt;|&lt;/span&gt; base64 -w &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tail -1
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Create the key, for the vault:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/random &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; 2&amp;gt;/dev/null &lt;span class="p"&gt;|&lt;/span&gt; od -An -tx1 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; \t\n&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;After we run those commands, we&amp;rsquo;ll create the config file, &lt;code&gt;ugarit.conf&lt;/code&gt;. To make it consistent with the example above, we&amp;rsquo;ll store it inside &lt;code&gt;/ugarit&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; emacs /ugarit/ugarit.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Then input the following:&lt;/p&gt;

&lt;div class="brush: scheme"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;storage&lt;/span&gt; &lt;span class="s"&gt;"backend-fs fs /ugarit/vault"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file-cache&lt;/span&gt; &lt;span class="s"&gt;"/ugarit/cache"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;hash&lt;/span&gt; &lt;span class="nv"&gt;tiger&lt;/span&gt; &lt;span class="s"&gt;"SALT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;encryption&lt;/span&gt; &lt;span class="nv"&gt;aes&lt;/span&gt; &lt;span class="s"&gt;"KEY"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Replace SALT, and KEY, with the salt and key strings that we generated above. Save the file, then secure it.&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; chmod &lt;span class="m"&gt;600&lt;/span&gt; /ugarit/ugarit.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="basic-usage"&gt;Basic Usage&lt;/h1&gt;

&lt;h2 id="creating-snapshots"&gt;Creating Snapshots&lt;/h2&gt;

&lt;p&gt;To create a snapshot, run:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit snapshot /ugarit/ugarit.conf TAG DIRECTORY
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;TAG&lt;/strong&gt; is a name that you will identify the snapshot with later, while &lt;strong&gt;DIRECTORY&lt;/strong&gt; is the filesystem tree that you will create a snapshot of. To create, for example, a snapshot of the directory &lt;code&gt;pictures/&lt;/code&gt;, with the tag &lt;code&gt;pix&lt;/code&gt;, run Ugarit like this:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit snapshot /ugarit/ugarit.conf pix pictures
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;After the snapshot, you&amp;rsquo;ll see similar to the following:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="go"&gt;Archiving pictures to tag pix...&lt;/span&gt;
&lt;span class="go"&gt;Root hash: ddc888c86db6d7c468a27cc4af9b2907d219936df82e0971&lt;/span&gt;
&lt;span class="go"&gt;Successfully snapshotted pictures to tag pix&lt;/span&gt;
&lt;span class="go"&gt;Snapshot hash: ab290399f31fff1e3158c0ede8f90f59b2b41387af48f597&lt;/span&gt;
&lt;span class="go"&gt;Written 910460 bytes to the vault in 4 blocks, and reused 0 bytes in 0 blocks&lt;/span&gt;
&lt;span class="go"&gt;(before compression)&lt;/span&gt;
&lt;span class="go"&gt;File cache has saved us 1 file hashings / 638104 bytes (before compression)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id="exploring-snapshots"&gt;Exploring Snapshots&lt;/h2&gt;

&lt;p&gt;To interactively manage the contents of the vault, run:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit explore /ugarit/ugarit.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;To list the available commands:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Taking hints from the help usage, we&amp;rsquo;ll extract a directory, that was part of the snapshot earlier. Let&amp;rsquo;s say that the original path of that directory was &lt;code&gt;pictures/holiday&lt;/code&gt;. So, to extract the directory &lt;code&gt;holiday/&lt;/code&gt; to the current directory, run:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;pix
&lt;span class="go"&gt;/pix&amp;gt; cd current&lt;/span&gt;
&lt;span class="go"&gt;/pix/current&amp;gt; cd contents&lt;/span&gt;
&lt;span class="go"&gt;/pix/current/contents&amp;gt; get holiday&lt;/span&gt;
&lt;span class="go"&gt;Extracted holiday&lt;/span&gt;
&lt;span class="go"&gt;/pix/current/contents&amp;gt; exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id="extracting-snapshots-directly"&gt;Extracting Snapshots Directly&lt;/h2&gt;

&lt;p&gt;If, however, you know the exact path to a file or directory that you want to extract, you can instead run Ugarit with the extract mode. To extract the directory &lt;code&gt;holiday/&lt;/code&gt; from above, directly, run:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit extract /ugarit/ugarit.conf /pix/current/contents/holiday
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="tips"&gt;Tips&lt;/h1&gt;

&lt;h2 id="remote-filesystems"&gt;Remote Filesystems&lt;/h2&gt;

&lt;p&gt;Ugarit is not limited to creating snapshots of a local filesystem. It can also be used to create snapshots of trees, from a remote host, mounted locally. If you have an &lt;a href="http://fuse.sourceforge.net/sshfs.html"&gt;SSHFS&lt;/a&gt; mount, for example, you can still create a snapshot of it, just like any other local filesystem:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sshfs remotehost:/ ~/mnt/sshfs/remotehost
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/mnt/sshfs
&lt;span class="gp"&gt;$&lt;/span&gt; ugarit snapshot /ugarit/ugarit.conf remotehost
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The same applies to &lt;a href="http://www.samba.org/samba/smbfs/"&gt;SMBFS&lt;/a&gt; mounts:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo mount -t cifs -o &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$USER&lt;/span&gt;,uid&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$USER&lt;/span&gt; //winhost/c ~/mnt/smbfs/winhost/c
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/mnt/smbfs
&lt;span class="gp"&gt;$&lt;/span&gt; ugarit snapshot /ugarit/ugarit.conf winhost
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id="miscellany"&gt;Miscellany&lt;/h2&gt;

&lt;p&gt;To disable output, when creating snapshots:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit snapshot /ugarit/ugarit.conf -q ...
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;To enable very verbose output, when creating snapshots:&lt;/p&gt;

&lt;div class="brush: console"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ugarit snapshot -:a256 /ugarit/ugarit.conf ...
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h1 id="notes"&gt;Notes&lt;/h1&gt;

&lt;p&gt;When you are doubtful of the performance of the disk where you&amp;rsquo;ll be storing the snapshots, disable the &lt;a href="http://linux.about.com/library/cmd/blcmdl1_updatedb.htm"&gt;locate and updatedb&lt;/a&gt; service. It is usually run periodically via cron. It places a lot of load on the disk, and may over-stress it. Your mileage may vary.&lt;/p&gt;

&lt;p&gt;An important caveat worth mentioning is that, due to the way Ugarit works, snapshot deletions do not exist. The storage mechanism works similarly to Git, only that there is no rebase option.&lt;/p&gt;

&lt;p&gt;Ugarit was created by &lt;a href="http://www.snell-pym.org.uk/alaric/"&gt;Alaric Snell-Pym&lt;/a&gt;. If you want to learn more about it, head over to &lt;a href="http://www.kitten-technologies.co.uk/project/ugarit/doc/trunk/README.wiki"&gt;kitten-technologies.co.uk/project/ugarit/&lt;/a&gt;. To report bugs, go to &lt;a href="http://www.kitten-technologies.co.uk/project/ugarit/reportlist"&gt;kitten-technologies.co.uk/project/ugarit/reportlist&lt;/a&gt; .&lt;/p&gt;&lt;/html&gt;</description></item></channel></rss>